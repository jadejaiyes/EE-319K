;****************** main.s ***************
; Program initially written by: Yerraballi and Valvano
; Author: Jade Jaiyesimi
; Date Created: 1/15/2018 
; Last Modified: 9/5/2019 
; Brief description of the program: Solution to Lab 1
; The objective of this system is to implement odd-bit counting system
; Hardware connections: 
;  Output is positive logic, 1 turns on the LED, 0 turns off the LED
;  Inputs are negative logic, meaning switch not pressed is 1, pressed is 0
;    PE0 is an input 
;    PE1 is an input 
;    PE2 is an input 
;    PE3 is the output
; Overall goal: 
;   Make the output 1 if there is an odd number of switches pressed, 
;     otherwise make the output 0

; The specific operation of this system 
;   Initialize Port E to make PE0,PE1,PE2 inputs and PE3 an output
;   Over and over, read the inputs, calculate the result and set the output
; PE2  PE1 PE0  | PE3
; 0    0    0   |  1    odd number of 0’s
; 0    0    1   |  0    even number of 0’s
; 0    1    0   |  0    even number of 0’s
; 0    1    1   |  1    odd number of 0’s
; 1    0    0   |  0    even number of 0’s
; 1    0    1   |  1    odd number of 0’s
; 1    1    0   |  1    odd number of 0’s
; 1    1    1   |  0    even number of 0’s
;There are 8 valid output values for Port E: 0x01,0x02,0x04,0x07,0x08,0x0B,0x0D, and 0x0E. 

; NOTE: Do not use any conditional branches in your solution. 
;       We want you to think of the solution in terms of logical and shift operations

GPIO_PORTE_DATA_R  EQU 0x400243FC
GPIO_PORTE_DIR_R   EQU 0x40024400
GPIO_PORTE_DEN_R   EQU 0x4002451C
SYSCTL_RCGCGPIO_R  EQU 0x400FE608

       THUMB
       AREA    DATA, ALIGN=2
;global variables go here
		ALIGN
      AREA    |.text|, CODE, READONLY, ALIGN=2
      EXPORT  Start
Start	LDR R1, =SYSCTL_RCGCGPIO_R  ;code tO run once that initializes PE3,PE2,PE1,PE0
		LDR R0, [R1]
		ORR R0, #0x10
		STR R0, [R1]
		NOP
		NOP
		LDR R0, =GPIO_PORTE_DIR_R
		LDR	R2, [R0]
		ORR R2, #0x08 	;PE0, PE1, PE2 input, PE3 output
		AND	R2, #0xF8
		STR R2, [R0]
		LDR R2, =GPIO_PORTE_DEN_R 
		LDR	R3, [R2]
		ORR R3, #0x0F ; ENABLE PINS
		STR R3, [R2]
loop	LDR R3, =GPIO_PORTE_DATA_R
		LDR R4, [R3]	    
		AND R5, R4, #0x01	;select bit 1
		LSL	R5, R5, #3
		AND R6, R4, #0x02	;select bit 2
		LSL	R6, R6, #2
		AND R7, R4 ,#0x04	;select bit 3
		LSL	R7, R7, #1
		
		EOR	R5, R7
		EOR	R5, #0x08
		NOP
		NOP
		EOR R6, R5
		STR R6, [R3]
		
    B    loop


		ALIGN        ; make sure the end of this section is aligned
      END          ; end of file
          
